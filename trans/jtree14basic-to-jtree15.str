module jtree14basic-to-jtree15
imports
  liblib
  Basic-Java
  Java-15

strategies

  io-jtree14basic-to-jtree15 =
    io-wrap(
      jtree14basic-to-jtree15
    )

  jtree14basic-to-jtree15 = 
    topdown(try(BasicTo15))

/**
 * Packages
 */
rules

  BasicTo15 :
    PackageDec(name) -> PackageDec([], name)

  BasicTo15 :
    ImportDec(TypeRef(tname)) -> TypeImportDec(tname)

  BasicTo15 :
    ImportDec(PackageRef(pname)) -> TypeImportOnDemandDec(pname)

/**
 * Interface Declarations
 */
rules

  BasicTo15 :
    InterfaceDec(mods, name, implements, InterfaceBody(body))
      ->
    InterfaceDec(InterfaceDecHead(mods, name, None(), implements), body)

/**
 * Class Declarations
 */
rules

  BasicTo15 :
    ClassDec(mods, Id(name), extends, implements, body)
      ->
    ClassDec(ClassDecHead(mods, Id(name), None(), extends, implements), body)

  BasicTo15 :
    Implements(is) -> ImplementsDec(is)

  BasicTo15 :
    Extends(c) -> SuperDec(c)


/**
 * Constructor Declarations
 */
rules

  BasicTo15 :
    ConstructorDec(mods, class, params, throws, body) -> 
      ConstrDec(ConstrDecHead(mods, None(), class, params, throws), body)

  BasicTo15 :
    ConstructorBody(c, stms) -> ConstrBody(c, stms)

  BasicTo15 :
    QSuperCInvoke(q, exprs) -> QSuperConstrInv(q, None(), exprs)

  BasicTo15 :
    SuperCInvoke(exprs) -> SuperConstrInv(None(), exprs)

  BasicTo15 :
    CInvoke(exprs) -> AltConstrInv(None(), exprs)

/**
 * Method Declarations
 */
rules
  
  BasicTo15 :
    Throws(exceptions) -> ThrowsDec(exceptions)

  BasicTo15 :
    MethodDec(dec) -> MethodDec(dec, NoMethodBody())

  BasicTo15 :
    Head(mods, type, Id(n), params, throws) -> MethodDecHead(mods, None(), type, Id(n), params, throws)

  BasicTo15 :
    DeprHead(mods, type, Id(n), params, dims, throws)
      ->
    DeprMethodDecHead(mods, None(), type, Id(n), params, dims, throws)

/**
 * Statements
 */
rules

  BasicTo15 :
    LocalVarDec(_, _) -> LocalVarDecStm(<id>)

  BasicTo15 :
    FinalLocalVarDec(_, _) -> LocalVarDecStm(<id>)

  BasicTo15 :
    For(init, cond, update, body) -> For(newinit, cond, update, body)
    where
      <LocalVarDecTo15> init => newinit

  BasicTo15 :
    Expr(e) -> ExprStm(e)

/**
 * Expressions
 */

  BasicTo15 :
    Method(e, name) -> Method(e, None(), name)

  BasicTo15 :
    SuperMethod(name) -> SuperMethod(None(), name)

  BasicTo15 :
    QSuperMethod(c, name) -> QSuperMethod(c, None(), name)

/**
 * Types
 */
rules

  BasicTo15 :
    ClassType(t) -> ClassType(t, None())

  BasicTo15 :
    InterfaceType(t) -> InterfaceType(t, None())

/**
 * Variable Declarations
 */
rules

  BasicTo15 :
    VarId(Id(s)) -> Id(s)

  BasicTo15 :
    VarId(Id(s), b*) -> ArrayVarDecId(Id(s), b*)

  LocalVarDecTo15 :
    LocalVarDec(type, decs) -> LocalVarDec([], type, decs)

  LocalVarDecTo15 :
    FinalLocalVarDec(type, decs) -> LocalVarDec([Final()], type, decs)

  BasicTo15 :
    ArrayInit(exprs, _) -> ArrayInit(exprs)

/**
 * Names
 */
rules

  BasicTo15 :
    Name(ids) -> ids

  BasicTo15 :
   QTypeName(q, Id(x)) -> TypeName(q, Id(x))

/**
 * Literals
 */

  BasicTo15 :
    OctaEscape(c1) -> OctaEscape1(c1)

  BasicTo15 :
    OctaEscape(c1, c2) -> OctaEscape2(c1, c2)

  BasicTo15 :
    OctaEscape(c1, c2, c3) -> OctaEscape3(c1, c2, c3)
