2004-07-21  Martin Bravenboer <martin@cs.uu.nl>

	* syn/basic/Stratego-Java.sdf: added the stm meta variable, stm |[
	... ]| quotation and ~stm: anti-quotation, and ~bstm:
	anti-quotation. Reported by Raihan.
	
2004-07-10  Martin Bravenboer <martin@cs.uu.nl>

	* xtc/parse-java.str: added an -s|--start-symbol option to parse
	different start symbols then a full CompilationUnit.
	
2004-07-07  Martin Bravenboer <martin@cs.uu.nl>

	* xtc/parse-java.str: added a --release flag to the parse-java
	util. Use parse-java --release 1.4 to parse classic Java. Default
	is 1.5.

	* xtc/parse-java.str: added some documentation in the form of
	tool-doc.
	
2004-06-30  Martin Bravenboer <martin@cs.uu.nl>

	* pp/pp-Java.str: now uses a generated java-parenthesize
	module. This module places parenthesis only where really
	necessary.

	* pp/pp-Java-Statements.str: improved pretty-printing of
	if-statements.
	
2004-04-20  Martin Bravenboer <martin@cs.uu.nl>

	* syn/basic/Java-Identifiers.sdf: context-free to lexical rejects
	are not allowed (BoolLiteral). Replaced by the token true, false
	and null. Reported by Jurgen Vinju.

	* test/basic/identifiers.testsuite: parse-unit testsuite for
        Java identifiers.	
	
2004-04-07  Martin Bravenboer <martin@cs.uu.nl>

	* syn/generic/Java-StaticImport.sdf: added production rules for
	the static import facility of 1.5.

	* pp/pp-Java.str: added pretty-print rules for static import.
	
2004-03-16  Martin Bravenboer <martin@cs.uu.nl>

	* syn/eblock/*: implemented an extension of Generic-Java with
	expression blocks. An Expression block a list of block-level
	statements, followed or preceeded by an expression. This
	expression is the value of the expression block. The block-level
	statements are to be lifted to statements before (PreEBlock) or
	after (PostEBlock) the context expression.

	This feature is extremely useful in code generators.

	* trans/core-lift-eblocks.str: first implementation of EBlock
	lifting. It more or less works, but probably not for nested
	blocks, and anonymous inner classes.

2004-02-24  Martin Bravenboer <martin@cs.uu.nl>

	* pp/*: implemented NamedEscapes in the pretty printer.

2004-02-16  Martin Bravenboer <martin@cs.uu.nl>

	* syn/basic/Makefile.am
	* syn/generic/Makefile.am
	* sig/Makefile.am: produce rtg-nf, not rhg-nf.

2004-02-05  Martin Bravenboer <martin@cs.uu.nl>

	* syn/basic/Java-Literals.sdf: character and string literals are
	no longer lexical syntax.

	Lexical syntax is imploded to Strings in an abstract syntax tree
	and that is not very useful because the rather complex structure
	is completely lost then. When using a separate lexical analysis
	like in conventional parsing techniques this cannot really be
	prevented because the parser just operates on tokens.

	I think we should forget about tokens at all: lexical syntax as it
	used right now in SDF is just syntax without layout and you don't
	want to implode this to a String in all cases. I hope the new
	approach to defining layout for context-free syntax sections in
	SDF3 will solve these problems in a more clean way.

	Currently, by defining literals in syntax sections constructors
	can be attached to them and layout is not inserted by the SDF
	normalizer in pgen. This is technique is also applied in the XML
	syntax definition.

	Why is this useful?
	- AST is now much easier to 'desugar'
	
	- clearer and more correct pretty printing
	
	- improved handling of 'lexical syntax' in the AST: no need to
	escape stuff or add double quotes or whatever.

	- better support for concrete object syntax where meta variables
	are in 'lexical syntax'.

	The change to syntax sections revead an ambigiuity bug in octal
	escapes, which wasn't reported before because of the 'handy'
	filters in SGLR. parse-unit should invoke sglr with all filters
	disabled.

	* pp/pp-Java-Literals.str: added the simple cases for the new
	literal constructs. Still need to implement all constructs.

	* sig/Makefile.am: Stratego signatures for Java and Generic-Java
	are now generated from RHG using stratego-regular tools. sdf2rhg
	can handle the more complex SDF constructs because it operates on
	partially normalized SDF modules. sig2rhg just generates one big
	module, so there are no separate modules anymore.

2004-02-05  Martin Bravenboer <martin@cs.uu.nl>

	* syn/basic/Java-Prefixed.sdf: renamings for some (not all yet)
	Java sorts by prefixing them with Java. This module should be used
	for embedding concrete object syntax in Java.

2004-02-04  Martin Bravenboer <martin@cs.uu.nl>

	* syn/basic/Java-Comments.sdf: added follow restriction on
	optional layout: LAYOUT?  -/- [\/].[\/]. This restriciton is
	related to the one for /* and solves this problem:
	
	+ * {// aa
	}
	  <ClassBody-CF>
	    {
	    <LAYOUT?-CF>
	    <ClassBodyDec*-CF>
	    <LAYOUT?-CF>
	      <LAYOUT-CF>
	        // aa
	
	    }
	  <ClassBody-CF>
	    {
	    <LAYOUT?-CF>
	      <LAYOUT-CF>
	        // aa
	
	    <ClassBodyDec*-CF>
	    <LAYOUT?-CF>
	    }
	
2004-01-31  Martin Bravenboer <martin@cs.uu.nl>

	* test/j2sdk: separate directory for j2sdk testsuites.

	* Version to 0.4pre.

	* Bugs to stratego-bugs@cs.uu.nl

2004-01-31  Martin Bravenboer <martin@cs.uu.nl>

	* Follow restriction for /* */ and LAYOUT?. All of GNU Classpath
	java.* is now accepted by the Java grammar of java-front :) .

	* Version to 0.4.

2004-01-31  Martin Bravenboer <martin@cs.uu.nl>

	* Fixed typo causing unicode escape to be rejected.

	* Added final local variabele declarations.

	* Still 3 of 1035 GNU Classpath java.* don't parse.
	
2004-01-31  Martin Bravenboer <martin@cs.uu.nl>

	* Major performance improvements by removing a horrible reject
	construct on 'InputChar'. This appeared to have an amazing bad
	influence on the performance in modules with newline terminated
	single line comments ( // ... )

	* xtc/files2parse-unit-testsuite: generate a parse-unit testsuite
	from a newline separated list of files.

	* test/gnu-classpath/Makefile.am: test the Java grammar by parsing
	the full GNU Classpath. There are still some minor problems and
	parse-unit causes a segmentation fault after parsing about 500
	files. 

2003-08-29  Martin Bravenboer <mbravenb@cs.uu.nl>

	* Improving the ast of java-front:
	- syn/basic/Java-Identifiers.sdf: Id is now a context-free sort
	 and uses the constructor Id.
	 - ayn/basic/Java-Names.sdf: Name now has a constructor Name.

	 * pp/pp-Java-Names.str, pp/pp-Java.str: using the new ast
	structure.

2003-08-28  Martin Bravenboer <mbravenb@cs.uu.nl>

	* configure.in: java-front requires stratego-regular from now (who
	doesn't? ;) )

	* Makefile.regular: copied from xml-tools. Should not be modified
	(subversion should support links)

	* syn/basic/Makefile.am: install Java.rtg-nf

2003-02-25  Martin Bravenboer <martin@mbravenboer.org>

	* pp/Makefile.am: Include sdf/gpp, not sdf/box-tools.

2002-11-23  Martin Bravenboer <martin@mbravenboer.org>

	* Small changes to configure.in to profit from new autotools.

2002-11-20  Martin Bravenboer <martin@mbravenboer.org>

	* Ad-hoc solution for parentheses around expressions in
	for-loop. A more powerfull solution for priorities must fix this
	later.

2002-11-20  Martin Bravenboer <martin@mbravenboer.org>

	* Added the last missing pretty printing constructs.  Thanks to
	Stefan Reich for mentioning this problem.

2002-11-18  Martin Bravenboer <martin@mbravenboer.org>

	* Added priority for array access. I have to figure out if this
	according to the JLS.

2002-09-20  Martin Bravenboer <martin@mbravenboer.org>

	* Removed the priorities of yesterday. Eelco Visser pointed out
	that because of the interpretation of priorities a while in the
	then branch of an if-else is no longer allowed. A prefer on the
	if-then solves everything.
     
2002-09-19  Martin Bravenboer <martin@mbravenboer.org>

	* Added context-free priorities for while, for, and the labeled
	statement. if-then-else > if-then doesn't solve all dangling else
	problems. Now it should work (unit-tests available in de statement
	test-suite).

2002-09-14  Martin Bravenboer <martin@mbravenboer.org>

	* Added a production for generic methods in interfaces. I forgot
	this one.

2002-08-29  Martin Bravenboer <martin@mbravenboer.org>

	* Implemented pretty-printing of while.

	* Implemented pretty-printing of (Q)NewInstance with class-bodies
	for Generic Java and classic Java

2002-08-27  Martin Bravenboer <martin@mbravenboer.org>

	* configure.in improved after some tips of Merijn de Jonge.

	* Added package definition (created by Merijn de Jonge) for the
	Online Package Base. java front and the various required tools can
	now be downloaded as a bundle from the Online Package Base.

2002-08-26  Martin Bravenboer <martin@mbravenboer.org>

	* Added a script "parse-java" to parse Java or Generic Java code.

	* Moved all scripts to "scripts"

2002-08-25  Martin Bravenboer <martin@mbravenboer.org>

	* Fixed huge priority bug with method invocation and field access:
	Expr "." Id must have highest priority

2002-08-24  Martin Bravenboer <martin@mbravenboer.org>

	* Added anti quotation for literals to Stratego-Java.sdf

2002-08-22  Martin Bravenboer <martin@mbravenboer.org>

	* Modified pp-Java-Literals to workaround concrete syntax bug in
	Stratego.

	* Implemented pretty-printing for the if construct and throw in
	pp-Java-Statement.

2002-08-21  Martin Bravenboer <martin@mbravenboer.org>

	* Implemented pretty-printing in pp-Generic-Java.

	* Created Generic-Java.sdf, a testsuite and Stratego signature
	generation for Generic-Java.

	* Restructured method invocation

	* Removed distinction TopLevel/Member/Local TypeDecs

2002-08-20  Martin Bravenboer <martin@mbravenboer.org>

	* Added LocalClassDec -> BlockStm

2002-08-19  Martin Bravenboer <martin@mbravenboer.org>

	* Implemented pretty-printer

2002-08-05  Martin Bravenboer <martin@mbravenboer.org>

	* Implemented parse-unit and started a decent testsuite

2002-08-04  Martin Bravenboer <martin@mbravenboer.org>

	* Solved the array creation <-> array access ambiguity with a
	reject.

2002-07-30  Martin Bravenboer <martin@mbravenboer.org>

	* Added priorities for binary expressions.

2002-07-29  Martin Bravenboer <martin@mbravenboer.org>

	* Initial version of Java-Expressions module.

2002-07-28  Martin Bravenboer <martin@mbravenboer.org>

	* Work on JLS 2.0: inner classes and primaries.

2002-07-27  Martin Bravenboer <martin@mbravenboer.org>

	* Initial version of the GNU build system powered version of Java
	Front for XT.