TestSuite(
  Name("Generic CompilationUnits")
, Sort("CompilationUnit")
, Tests(
  [ Test(Descr("simple interface"), File("compilation-units/Cancelable1.java"), Success())
  , Test(Descr("simple interface"), File("compilation-units/Cancelable2.java"), Success())
  , Test(Descr("simple class with imports"), File("compilation-units/Test1.java"), Success())
  , Test(Descr("simple public class"), File("compilation-units/Test2.java"), Success())
  , Test(Descr("simple class"), File("compilation-units/Test3.java"),
          CompilationUnit(None(), [], [ClassDec([], Id("Test3"), None, None, None, ClassBody([]))]))
  , Test(Descr("simple class with superclass"), File("compilation-units/Test4.java"), Success())
  , Test(Descr("simple class with qualified superclass"), File("compilation-units/Test5.java"), Success())
  , Test(Descr("static initializer"), File("compilation-units/Test6.java"), Success())
  , Test(Descr("static intializer"), File("compilation-units/Test7.java"), Success())
  , Test(Descr("simple method"), File("compilation-units/Test8.java"), Success())
  , Test(Descr("abstract method"), File("compilation-units/Test9.java"), Success())
  , Test(Descr("instance initializer"), File("compilation-units/Test10.java"), Success())
  , Test(Descr("silly semicolon"), File("compilation-units/Test11.java"), Success())
  , Test(Descr("field declaration"), File("compilation-units/Test12.java"), Success())
  , Test(Descr("field declaration with initial value"), File("compilation-units/Test13.java"), Success())
  , Test(Descr("private field declaration"), File("compilation-units/Test14.java"), Success())
  , Test(Descr("private, static, final field declaration"), File("compilation-units/Test15.java"), Success())
  ])
)