TestSuite(
  Name("Lexical translations")
, Sort("BlockStm")
, Tests(
  [ Test(Descr("Comments, as tokens, separate other tokens")
    , String("int i = 1/**/0;"), Failure()
    )
  , Test(Descr("Comments, as tokens, separate other tokens")
    , String("i/**/nt i = 10;"), Failure()
    )
  , Test(Descr("Comments, as tokens, separate other tokens")
    , String("i +/**/= 10;"), Failure()
    )
  , Test(Descr("The parser must consume the largest token, even if another interpretation is valid")
    , String("return a--b;"), Failure()
    )
  , Test(Descr("The parser must consume the largest token, even if another interpretation is valid")
    , String("classT32i3 {};"), Failure()
    )
  , Test(Descr("The parser must consume the largest token, even if another interpretation is valid")
    , String("int i = 1/* only one comment, last / performs division *//1;"), Success()
    )
  , Test(Descr("The parser must consume the largest token, even if another interpretation is valid")
    , String("int i = 1/// comment starts at first /, not second
        1;"), Failure()
    )
  , Test(Descr("Even in comments, \u escapes must be legal")
    , String("return /* \\udefg */ ;"), Failure()
    )
  , Test(Descr("3.2-invalid-2: ensure that unicode escapes are processed before tokenization is done")
    , String("return \\u0061\\u002d\\u002d\\u0062;"), Failure()
    )
  , Test(Descr("3.3-invalid-1: A unicode sequence must have four hex digits")
    , String("char c = '\\u20';"), Failure()
    )
  ])
)