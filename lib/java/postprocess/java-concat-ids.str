module java/postprocess/java-concat-ids

imports 
  libstrategolib  

signature constructors
  ConcatIds : ID -> ID

strategies

  java-concat-ids =
    topdown(try(
       concat-id-java-pascal-case
    <+ concat-id-underscore-camel-case
    <+ concat-id-camel-case
    ))

/** @internal */
rules

  concat-id-java-pascal-case :
    ClassDecHead(p1, Id(p2), p3, p4, p5) -> ClassDecHead(p1, Id(<concat-id-pascal-case> p2), p3, p4, p5)

  concat-id-java-pascal-case :
    TypeName(p1, p2) -> TypeName(p1, <alltd(concat-id-pascal-case)> p2)

  concat-id-java-pascal-case :
    TypeName(p1) -> TypeName(<alltd(concat-id-pascal-case)> p1)
    
  // PascalCase
  concat-id-pascal-case:
    ConcatIds(xs) -> <concat-strings> xs'
    where
      xs' := <map(give-capital)> xs
  
  // _camelCase
  concat-id-underscore-camel-case:
    ConcatIds(["_", x | xs]) -> <concat-strings> ["_", x | xs']
    where
      xs' := <map(give-capital)> xs
  
  // camelCase
  concat-id-camel-case:
    ConcatIds([x | xs]) -> <concat-strings> [x | xs']
    where
      xs' := <map(give-capital)> xs
  
  give-capital =
    string-as-chars([to-upper | id])
