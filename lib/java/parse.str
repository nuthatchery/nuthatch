/**
 * @author Martin Bravenboer
 */
module java/parse
imports
  libstratego-lib
  libstratego-sglr

/**
 * Parsing from a string to a parse tree
 */
strategies

  /**
   * @param Start sort (String)
   * @type String -> ParseTree(sort)
   */
  parse-java-string-pt(|sort) =
    where(tbl := <get-java-parse-table> sort)
    ; parse-string-pt(strsglr-report-parse-error | tbl, sort, "string")

  /**
   * @param Start sort (String)
   * @type String -> sort
   */
  parse-java-string(|sort) =
    parse-java-string-pt(|sort)
    ; implode-asfix

/**
 * Parsing from a stream to a parse tree
 */ 
strategies

  parse-java-stream-pt(|path) =
    parse-java-stream-pt(|"CompilationUnit", path)

  /**
   * @param Start sort (String)
   * @type Stream -> ParseTree(sort)
   */
  parse-java-stream-pt(|sort, path) =
    where(tbl := <get-java-parse-table> sort)
    ; parse-stream-pt(strsglr-report-parse-error | tbl, sort, path)

/**
 * Parsing from a stream to an AST
 */
strategies

  /**
   * @type Stream -> CompilationUnit
   */
  parse-java-stream(|path) =
    parse-java-stream(|"CompilationUnit", path)

  /**
   * @param Start sort (String)
   * @type Stream -> sort
   */
  parse-java-stream(|sort, path) =
    parse-java-stream-pt(|sort, path)
    ; implode-asfix

/**
 * Strategies for making Java to Java source transformation tools.
 *
 * @todo Make Java specific option descriptions (not ATerm to ATerm)
 */
strategies

  io-java2java-wrap(s) =
    io-stream-wrap(io-java2java(s))

  io-java2java-wrap(extra-opts, s) =
    io-stream-wrap(extra-opts, io-java2java(s))

  io-java2java-wrap(extra-opts, usage, about, s) =
    io-stream-wrap(extra-opts, usage, about, io-java2java(s))

strategies

  /**
   * Strategy for use in io-stream-wrap.
   *
   * @type (Stream, Stream) -> Stream
   */
  io-java2java(s) =
    io-java2java(s | "CompilationUnit")

  /**
   * Strategy for use in io-stream-wrap.
   *
   * @type (Stream, Stream) -> Stream
   */
  io-java2java(s | sort) =
    ?(<id>, fout)
    ; parse-java-stream(|sort, <get-config <+ !stdin()> "-i")
    ; s
    ; pp-java-stream(|fout)
    ; <fputs> ("\n", fout)

/**
 * Access to Java parse tables.
 */
strategies

  /**
   * Returns an open parse table for the given sort.
   *
   * @type Sort -> OpenParseTable
   */
  get-java-parse-table =
    if ?"CompilationUnit" then
      <jfr-memo-open-parse-table(import-term(JavaCompilationUnit-15.tbl))> "JavaCompilationUnit-15.tbl"
    else
      <jfr-memo-open-parse-table(import-term(Java-15.tbl))> "Java-15.tbl"
    end

  /**
   * @todo Maybe this should be in libstratego-sglr
   */
  jfr-memo-open-parse-table(gettbl) =
    jfr-MemoParseTable
    <+ ?key
       ; gettbl
       ; tbl := <open-parse-table>
       ; rules(jfr-MemoParseTable : key -> tbl)
